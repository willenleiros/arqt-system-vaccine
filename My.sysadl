Model SysADLModel ; package VASystemTypes { value type Int { } value type Boolean { } value type String { } value type Void { } value type Real { } value type Temperature { dimension = Temperature } dimension Temperature value type CelciusTemperature extends Temperature { unit = Celcius dimension = Temperature } unit Celcius { dimension = Temperature } unit Fahrenheit { dimension = Temperature } value type FahrenheitTemperature extends Temperature { unit = Fahrenheit dimension = Temperature } enum StateVaccine { valid , invalid } }   Requirement PostoVacinaFR ( 3 ) { text = "O sistema tem varios postos de vacinas  no qual são reponsaveis por receber, ler e processar as informações do distribuidor de vacinas" Requirement ExtracaoVacinasFR ( 3.1 ) { text = "O componente deve extrair a quantidade de vacinas recebidas do QRCode" } Requirement VerificaoVacinaFR ( 3.2 ) { text = "O componente deve ter a capacidade de ler e verificar as condições de armazenamento da vacina e o estado da temperatura" } Requirement EstadoVacina ( 3.3 ) { text = "Deve ser registrado o estado atual da vacina" } } Requirement ConfiabilidadeNFR ( 2 ) { text = "O sistema deve fazer testes de extração e verificação de dados dos containers de vacinas" }Requirement ToleranciaNFR ( 1 ) { text = "O sistema deve ser capaz de recuperar-se ao surgimento de falhas " } Requirement ControladorCentroReceptorFR ( 1 ) { text = "O controlador deve ser capaz de ler o QRCode de container " Requirement QuantitativoDeVacinasFR ( 1.1 ) { text = "O controlador extrai os dados quantitativos de vacinas de um container" } Requirement TemperaturaArmazenamentoFR ( 1.2 ) { text = "O controlador extrai a temperatura de armazenamento das vacinas de um container" } } Requirement CentroDistribuidorFR ( 2 ) { text = "Componente central de distribuição para gerenciamento das vacinas" derive ConfiabilidadeNFR , ToleranciaNFR ; Requirement DistribuirVacinasFR ( 2.1 ) { text = "Capacidade de distribuir as vacinas para locais especificos de acordo com o quantitativo populacional" } } package VASystemComponents { import VASystemTypes ; import VASystemPorts ; import VASystemConnectors ; } package VASystemPorts { import VASystemTypes ; port def CelciusTemperatureIPT { flow in CelciusTemperature } port def CelciusTemperatureOPT { flow in CelciusTemperature } } package VASystemConnectors { }